---
- name: wait for jenkins.install.UpgradeWizard.state file to be available
  wait_for:
    path: "{{ jenkins_lib }}/jenkins.install.UpgradeWizard.state"

- name: Bypass - jenkins.install.InstallUtil.lastExecVersion
  copy:
    src: "{{ jenkins_lib }}/jenkins.install.UpgradeWizard.state"
    dest: "{{ jenkins_lib }}/jenkins.install.InstallUtil.lastExecVersion"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user }}"
    remote_src: True

- name: Ensure jenkins.install.InstallUtil.lastExecVersion has correct ownership
  file:
    path: "{{ jenkins_lib }}/jenkins.install.InstallUtil.lastExecVersion"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user }}"

- stat: path="{{ jenkins_lib }}/secrets/initialAdminPassword"
  register: adminpassword

- name: Get jenkins_admin_password from initialAdminPassword if still in var/lib/jenkins/secrets
  shell: cat "{{ jenkins_lib }}/secrets/initialAdminPassword"
  register: jenkins_initial_admin_password
  when: adminpassword.stat.exists == True

- name: Set jenkins_admin_password from initialAdminPassword if still in var/lib/jenkins/secrets
  set_fact: jenkins_admin_password="{{ jenkins_initial_admin_password.stdout }}"
  when: adminpassword.stat.exists == True

- name: Bypass - initialAdminPassword
  shell: mv {{ jenkins_lib }}/secrets/initialAdminPassword {{ jenkins_admin_password_file }}
  notify:
    - Restart Jenkins
  when: adminpassword.stat.exists == True

- name: Create jenkins configuration for RedHat
  file:
    path: /etc/sysconfig/jenkins
    state: touch
  when: ansible_os_family == "RedHat"

- name: Configure Jenkins Port for RedHat
  lineinfile:
    dest: /etc/sysconfig/jenkins
    regexp: ^JENKINS_PORT=
    line: JENKINS_PORT={{port}}
  register: config_changed
  when: ansible_os_family == "RedHat"

- name: Configure Jenkins Port for Debian
  template:
    src: etc.default.jenkins.j2
    dest: /etc/default/jenkins
  register: config_changed
  when: ansible_os_family == "Debian"

- name: Configure Jenkins Port and Prefix for FreeBSD
  lineinfile:
    dest: /etc/rc.conf
    regexp: ^jenkins_args=
    line: jenkins_args="--webroot=/usr/local/jenkins/war --httpPort={{ port }} --prefix={{ prefix }}"
  register: config_changed
  when: ansible_os_family == "FreeBSD"

- name: Restart jenkins now
  service: name=jenkins state=restarted
  when: config_changed.changed

- name: Configure Jenkins Prefix for RedHat
  when: prefix is defined and ansible_os_family == "RedHat"
  lineinfile:
    dest: /etc/sysconfig/jenkins
    regexp: ^PREFIX=
    line: PREFIX={{prefix}}

- name: Configure Jenkins E-mail
  when: email is defined and (ansible_os_family == "Debian" or ansible_os_family == "RedHat")
  template:
    src: hudson.tasks.Mailer.xml.j2
    dest: "{{ jenkins_lib }}/hudson.tasks.Mailer.xml"
    owner: jenkins
    group: jenkins
    mode: 0644

- name: Configure Jenkins E-mail
  when: email is defined and ansible_os_family == "FreeBSD"
  template:
    src: hudson.tasks.Mailer.xml.j2
    dest: /usr/local/jenkins/hudson.tasks.Mailer.xml
    owner: jenkins
    group: jenkins
    mode: 0644
