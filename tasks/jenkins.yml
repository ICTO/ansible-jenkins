---

- include: repo.yml

- name: Log in to Jenkins CLI if auth config is available
  # OK to ignore errors as it won't work before Jenkins is installed
  ignore_errors: yes
  command: >
    {{ jenkins_cli_cmd }} login --username {{ jenkins_admin_user }} --password {{ jenkins_admin_password }}
  when: jenkins_admin_user is defined and jenkins_admin_password is defined

- include: dependencies_deb.yml
  when: ansible_os_family == "Debian"

- include: dependencies_redhat.yml
  when: ansible_os_family == "RedHat"

- name: Install Jenkins for Debian
  apt: name=jenkins state=latest
  register: jenkins_install
  when: ansible_os_family == "Debian"

- name: Install Latest Jenkins Version for RedHat
  yum: name=jenkins state=latest
  register: jenkins_install
  when:
    - ansible_os_family == "RedHat"
    - (jenkins_ver == "latest") or
      (jenkins_ver == "") or
      (jenkins_ver is not defined)

- name: Install Specific Jenkins Version for RedHat
  yum: name=jenkins-{{ jenkins_ver }} state=installed
  register: jenkins_install
  when:
    - ansible_os_family == "RedHat"
    - jenkins_ver is defined
    - jenkins_ver != "latest"
    - jenkins_ver != ""

- name: Install Jenkins for FreeBSD
  pkgng: name=jenkins state=present
  register: jenkins_install
  when: ansible_os_family == "FreeBSD"

- name: Ensure jenkins is running
  service:
    name: jenkins
    state: started
  when: ansible_os_family == "RedHat" or ansible_os_family == "FreeBSD"

- name: Start jenkins on boot
  shell: chkconfig jenkins on
  when: ansible_os_family == "RedHat"

- name: Ensure jenkins is running and starting on boot
  service:
    name: jenkins
    state: started
    enabled: yes
  when: ansible_os_family == "FreeBSD"

- include: config.yml

- include: cli.yml

- include: plugins.yml

#- include: config.yml
